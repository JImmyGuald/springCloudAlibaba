spring:
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848 #配置Nacos地址
    gateway:
      discovery:
        locator:
          enable: true
      routes:
        - id: payment_routh #路由的ID，没有固定规则但要求唯一，建议配合服务名
          #uri: http://localhost:8001   #匹配后提供服务的路由地址
          uri: lb://nacos-provider # lb 开启负载均衡
          predicates:
            - Path=/echo/**   #断言,路径相匹配的进行路由
          filters:
            # redis限流 ， filter名称必须是RequestRateLimiter
          - name: RequestRateLimiter
            args:
              # 使用SpEL名称引用Bean，与上面新建的RateLimiterConfig类中的bean的name相同
              key-resolver: '#{@remoteAddrKeyResolver}'
              # 每秒填充令牌数量
              redis-rate-limiter.replenishRate: 1
              # 令牌桶最大容量
              redis-rate-limiter.burstCapacity: 10
        - id: host_route
          uri: http://localhost:8084
          predicates:
            - Path=/rpcv5/**
          filters:
          - name: Hystrix
            args:
              name: default
              fallbackUri: 'forward:/defaultfallback'
        - id: host_route
          uri: http://localhost:8085
          predicates:
            - Path=/test/echo/**
          filters:
          - StripPrefix=1
          - name: CircuitBreaker
            args:
              name: default
              fallbackUri: 'forward:/defaultfallback'
  redis:
    host: localhost
hystrix:
  command:
    default:
      circuitBreaker:
        enable: true
        requestVolumeThreshold: 10
        sleepWindowInMilliseconds: 5000
        errorThresholdPercentage: 50
      execution:
        isolation:
          strategy: SEMAPHORE
          semaphore:
            maxConcurrentRequests: 100
          thread:
            timeoutInMilliseconds: 3000
